## Command line configuration

# define what applications to provide for the command line application
[cli]
apps = list: ${cli_config_default:apps}, show_config_cli, app
cleanups = list: ${cli_config_default:cleanups}

# show informative messages for corpus and pretrained embedding
# downloading/access
[log_cli]
loggers = dict: {
    'zensols.deepnlp.embed': 'info',
    'zensols.install': 'info'}

# load defaults needed to set up the CLI
[import]
config_files = list:
    resource(zensols.util): resources/cli.conf,
    resource(zensols.util): resources/cli-config.conf,
    resource(zensols.util): resources/default.conf

# configuration files are optional
[config_cli]
expect = False

[config_import]
references = list: package

# import overrides, resource libraries, and configuration for the application
[config_imp]
type = import
config_files = list:
    ^{override}, ^{config_path},
    resource(zensols.util): resources/default.conf,
    resource(zensols.mednlp): resources/default.conf,
    ^{override}, ^{config_path},
    resource(zensols.nlp): resources/obj.conf,
    resource(zensols.nlp): resources/mapper.conf,
    resource(zensols.mednlp): resources/obj.conf,
    ^{override}, ^{config_path}

[app]
class_name = zensols.mednlp.Application
doc_parser = alias: mednlp_default:doc_parser
library = instance: mednlp_library

[app_decorator]
mnemonic_excludes = set: write
mnemonic_overrides = dict: {
  'show_config': 'conf'}
option_excludes = set: doc_parser, config_factory, library
option_overrides = dict: {
  'input_dir': {'long_name': 'input',
                'short_name': 'i', 'metavar': 'DIR'},
  'only_medical': {'long_name': 'medonly', 'short_name': 'm'},
  'text_or_file': {'long_name': 'language', 'metavar': '<STRING|FILE>'}}
